@model List<CRACKED.Dtos.CarroDto>
@using System.Linq

@{
    ViewBag.Title = "Carrito";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1 style="color:saddlebrown; font-family: cursive; text-align:center; font-weight:bold">Carrito de Compras</h1>

    @if (Model != null && Model.Any())
    {
        <table class="table table-custom">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                    <th>Total</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.Nombre
                        </td>
                        <td>@item.PrecioUnit</td>
                        <td>@item.Cantidad</td>
                        <td>@item.PrecioTotal</td>
                        <td>
                            <a href="javascript:void(0);" class="btn btn-secondary delete-btn" data-id="@item.IdPedidoProducto">
                                <i class="bi bi-trash nav-icon"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-warning mt-3">
            No hay productos en el carrito.
        </div>
    }

    @{
        float precioSubtotal = 0;
        float domicilio = 15000;
        float precioTotalTotal = 0;
        foreach (var item in Model)
        {
            precioSubtotal += item.PrecioTotal;
            precioTotalTotal = precioSubtotal + domicilio;
        }
    }

    <!-- Total del carrito -->
    <div class="total-container">
        <h2 class="total-text">Subtotal: @precioSubtotal</h2>
    </div>
    <div class="total-container">
        <h2 class="total-text">Valor Domicilio: @domicilio</h2>
    </div>
    <div class="total-container">
        <h2 class="total-text">Total Precio @precioTotalTotal</h2>
    </div>


    <!-- Botones para continuar comprando o finalizar compra -->
    <div class="d-flex justify-content-between">
        <a href="@Url.Action("Productos", "User")" class="btn btn-primary">Seguir comprando</a>
        <a href="@Url.Action("DatosEntrega", "Carrito")" class="btn btn-success">Finalizar Pedido</a>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning mt-3" style="display:none" id="carritoVacio">
            No hay productos en el carrito.
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Incluir el CSS y el JS de SweetAlert2 -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.4/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.4/dist/sweetalert2.all.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".change-status-btn").click(function () {
            var idPedido = $(this).data("id"); // Obtiene el ID del pedido
            var nuevoEstado = 5; // Cambiar al estado específico, en este caso, 5

            // Confirmación antes de cambiar el estado con SweetAlert2
            Swal.fire({
                title: '¿Estás seguro?',
                text: "¿Deseas cambiar el estado de este pedido?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, cambiar estado',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Enviar la solicitud AJAX al controlador
                    $.ajax({
                        url: '@Url.Action("GuardarEstado", "Admin")', // Ruta al controlador y acción
                        type: 'POST',
                        data: { idPedido: idPedido, idEstado: nuevoEstado }, // Enviar el ID del pedido y el nuevo estado
                        success: function (response) {
                            // Si la actualización es exitosa, muestra mensaje y recarga la página
                            if (response.success) {
                                Swal.fire(
                                    '¡Estado Actualizado!',
                                    'El estado del pedido ha sido cambiado correctamente.',
                                    'success'
                                ).then(function () {
                                    location.reload(); // Recarga la página para ver los cambios
                                });
                            } else {
                                Swal.fire(
                                    'Error',
                                    response.message || 'No se pudo cambiar el estado del pedido.',
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Error',
                                'Ocurrió un error al intentar cambiar el estado.',
                                'error'
                            );
                        }
                    });
                }
            });
        });
    });
</script>



<!-- Estilos -->
<style>
    .table-custom th {
        background-color: #007bff; /* Fondo de los encabezados */
        color: #3d2306; /* Color del texto de los encabezados */
        font-weight: bold; /* Negrita en los encabezados */
        text-align: center;
    }

    .table-custom td {
        color: black; /* Color del texto de los encabezados */
    }

    .table-custom {
        width: 100%;
        background-color: transparent; /* Color de fondo claro */
        font-size: 20px; /* Tamaño de fuente */
        text-align: center;
    }

    .table th, .table td {
        background-color: transparent;
        border-color: saddlebrown;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        vertical-align: middle;
    }

    .btn-secondary {
        padding: 10px 30px;
        font-size: 16px;
        background-color: transparent;
        color: whitesmoke;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    .btn-success {
        padding: 10px 30px;
        font-size: 16px;
        background-color: saddlebrown;
        color: whitesmoke;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    .btn-primary {
        padding: 10px 30px;
        font-size: 16px;
        background-color: saddlebrown;
        color: whitesmoke;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    .total-container {
        text-align: right;
        margin-top: 20px;
    }

    .total-text {
        font-size: 25px;
        font-weight: bold;
        color: saddlebrown;
    }

    .btn:hover {
        opacity: 0.8;
        color: white;
        background-color: #a67145;
    }

    .nav-icon:hover {
        color: white;
    }
</style>
